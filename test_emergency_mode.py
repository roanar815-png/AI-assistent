"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
"""

def test_emergency_mode():
    print("üß™ –¢–ï–°–¢ –ê–í–ê–†–ò–ô–ù–û–ì–û –†–ï–ñ–ò–ú–ê")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç—ã
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    try:
        from services.assistant_service import assistant_service
        from services.document_service import document_service
        print("   ‚úÖ –ò–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...")
    try:
        templates = document_service.get_templates_list()
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: {len(templates)}")
        for t in templates:
            print(f"      - {t.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
        
        russia_template = None
        for t in templates:
            if "—Ä–æ—Å—Å–∏—è" in t.get('name', '').lower():
                russia_template = t
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω '–î–æ–∫—É–º–µ–Ω—Ç –†–æ—Å—Å–∏—è': {t['name']}")
                break
        
        if not russia_template:
            print("   ‚ùå –®–∞–±–ª–æ–Ω '–î–æ–∫—É–º–µ–Ω—Ç –†–æ—Å—Å–∏—è' –ù–ï –ù–ê–ô–î–ï–ù!")
            return
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤: {e}")
        import traceback
        traceback.print_exc()
        return
    
    # –¢–µ—Å—Ç 3: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
    test_message = """–ó–∞–ø–æ–ª–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç –†–æ—Å—Å–∏—è. –ê–ù–ö–ï–¢–ê (–¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü) 
–§–∞–º–∏–ª–∏—è: –ò–≤–∞–Ω–æ–≤ 
–ò–º—è: –ü—ë—Ç—Ä 
–û—Ç—á–µ—Å—Ç–≤–æ: –°–µ—Ä–≥–µ–µ–≤–∏—á 
–ò–ù–ù: 123456789012 
–¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67 
E-mail: ivanov.test@example.com"""
    
    try:
        import re
        user_info = {"user_id": "test-user"}
        
        field_patterns = {
            'last_name': r'(?:–§–∞–º–∏–ª–∏—è|—Ñ–∞–º–∏–ª–∏—è)[\s:=]+([–ê-–Ø–Å][–∞-—è—ë]+)',
            'first_name': r'(?:–ò–º—è|–∏–º—è)[\s:=]+([–ê-–Ø–Å–∞-—è—ë]+)',
            'middle_name': r'(?:–û—Ç—á–µ—Å—Ç–≤–æ|–æ—Ç—á–µ—Å—Ç–≤–æ)[\s:=]+([–ê-–Ø–Å][–∞-—è—ë]+)',
            'inn': r'(?:–ò–ù–ù|–∏–Ω–Ω)[\s:=]+(\d{10,12})',
            'phone': r'(?:–¢–µ–ª–µ—Ñ–æ–Ω|—Ç–µ–ª–µ—Ñ–æ–Ω)[\s:=]+(\+?[0-9\s\(\)\-]+)',
            'email': r'(?:E-mail|email|–ø–æ—á—Ç–∞)[\s:=]+([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})',
        }
        
        for field_name, pattern in field_patterns.items():
            match = re.search(pattern, test_message, re.IGNORECASE)
            if match:
                user_info[field_name] = match.group(1).strip()
                print(f"   ‚úÖ {field_name}: {match.group(1)}")
        
        if user_info.get('last_name') or user_info.get('first_name'):
            parts = []
            if user_info.get('last_name'): parts.append(user_info['last_name'])
            if user_info.get('first_name'): parts.append(user_info['first_name'])
            if user_info.get('middle_name'): parts.append(user_info['middle_name'])
            user_info['full_name'] = ' '.join(parts)
            print(f"   ‚úÖ full_name (–æ–±—ä–µ–¥–∏–Ω–µ–Ω–æ): {user_info['full_name']}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return
    
    # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞...")
    try:
        created_doc = assistant_service.create_document_from_template(
            user_id="test-user",
            template_id=russia_template['template_id'],
            user_data=user_info,
            conversation_data={
                "message": test_message,
                "response": "Test response"
            },
            send_email=False
        )
        
        if created_doc and created_doc.get('status') == 'success':
            print(f"   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"      Filepath: {created_doc.get('filepath')}")
            print(f"      Download URL: {created_doc.get('download_url')}")
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç")
            print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: {created_doc}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return
    
    print("\n" + "=" * 60)
    print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
    print("=" * 60)

if __name__ == "__main__":
    test_emergency_mode()

