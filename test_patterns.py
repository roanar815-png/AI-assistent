#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Тест паттернов извлечения данных
"""

import re

def test_patterns():
    """Тестируем паттерны извлечения данных"""
    
    print("ТЕСТ ПАТТЕРНОВ ИЗВЛЕЧЕНИЯ ДАННЫХ")
    print("=" * 50)
    
    # Тестовое сообщение
    test_message = """Заполни документ Россия. АНКЕТА (для физических лиц) Фамилия: Иванов Имя: Пётр Отчество: Сергеевич ИНН: 123456789012 Число, месяц, год рождения: 15 марта 1988 г. Адрес места жительства: Регион: Московская область Город: Химки Улица: Центральная Дом: 25 Кв.: 14 Телефон: +7 (999) 123-45-67 E-mail: ivanov.test@example.com Паспортные данные: серия 4509 № 123456, выдан ОВД г. Москвы 12.07.2010 Образование: МГУ им. М.В. Ломоносова, 2010 г., Экономист Место работы, должность: ООО «Тест-Системс», менеджер по развитию Сфера бизнеса (отрасль) и краткая информация о компании: IT и консалтинг; компания занимается разработкой и внедрением бизнес-решений. Опыт предпринимательской деятельности: 3 года, управление малым бизнесом в сфере торговли. Опыт общественной деятельности: участие в волонтёрских проектах, организация благотворительных акций. Эксперт в отрасли: цифровая трансформация и управление проектами. Выборные должности: не занимал. Дополнения: готов к участию в проектах, связанных с развитием предпринимательской среды."""
    
    print(f"1. ИСХОДНОЕ СООБЩЕНИЕ:")
    print(f"   Длина: {len(test_message)} символов")
    print(f"   Начало: '{test_message[:100]}...'")
    
    # Паттерны из кода
    field_patterns = {
        'last_name': r'(?:Фамилия|фамилия)[\s:=]*([А-ЯЁ][а-яё]+)',
        'first_name': r'(?:Имя|имя)[\s:=]*([А-ЯЁ][а-яё]+)',
        'middle_name': r'(?:Отчество|отчество)[\s:=]*([А-ЯЁ][а-яё]+)',
        'inn': r'(?:ИНН|инн)[\s:=]*(\d{10,12})',
        'phone': r'(?:Телефон|телефон)[\s:=]*(\+7[^\s]+)',
        'email': r'(?:E-mail|email|почта)[\s:=]*([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})',
        'region': r'(?:Регион|регион)[\s:=]*([А-ЯЁ][а-яё\s]+)',
        'city': r'(?:Город|город)[\s:=]*([А-ЯЁ][а-яё]+)',
        'street': r'(?:Улица|улица)[\s:=]*([А-ЯЁ][а-яё]+)',
        'house': r'(?:Дом|дом)[\s:=]*(\d+)',
        'apartment': r'(?:Кв\.?|квартира)[\s:=]*(\d+)',
        'birth_date': r'(?:Число[,\s]*месяц[,\s]*год\s+рождения|дата\s+рождения)[\s:=]*([^.!?]+)',
        'passport': r'(?:Паспортные\s+данные|паспорт)[\s:=]*([^.!?]+)',
        'education': r'(?:Образование|образование)[\s:=]*([^.!?]+)',
        'work_info': r'(?:Место\s+работы|работа)[\s:=]*([^.!?]+)',
        'activity_sphere': r'(?:Сфера\s+бизнеса|сфера)[\s:=]*([^.!?]+)',
        'business_experience': r'(?:Опыт\s+предпринимательской\s+деятельности|предпринимательский\s+опыт)[\s:=]*([^.!?]+)',
        'public_activity_experience': r'(?:Опыт\s+общественной\s+деятельности|общественный\s+опыт)[\s:=]*([^.!?]+)',
        'expertise_area': r'(?:Эксперт\s+в\s+отрасли|экспертиза)[\s:=]*([^.!?]+)',
        'elected_position': r'(?:Выборные\s+должности|выборная\s+должность)[\s:=]*([^.!?]+)',
        'additional_info': r'(?:Дополнения|дополнительно)[\s:=]*([^.!?]+)',
    }
    
    print(f"\n2. ТЕСТИРУЕМ ПАТТЕРНЫ:")
    
    extracted_data = {}
    
    for field_name, pattern in field_patterns.items():
        match = re.search(pattern, test_message, re.IGNORECASE)
        if match:
            extracted_data[field_name] = match.group(1).strip()
            print(f"   + {field_name}: {match.group(1)[:50]}...")
        else:
            print(f"   - {field_name}: не найден")
    
    print(f"\n3. РЕЗУЛЬТАТ:")
    print(f"   Извлечено полей: {len(extracted_data)}")
    
    if len(extracted_data) >= 5:
        print(f"   УСПЕХ! Данные извлекаются правильно!")
    else:
        print(f"   ПРОБЛЕМА! Извлечено мало данных!")
    
    # Проверяем ключевые поля
    key_fields = ['last_name', 'first_name', 'inn', 'phone']
    found_key_fields = [field for field in key_fields if field in extracted_data]
    
    print(f"   Ключевые поля: {len(found_key_fields)}/{len(key_fields)}")
    print(f"   Найденные: {found_key_fields}")

if __name__ == "__main__":
    test_patterns()


